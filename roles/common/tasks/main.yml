---
# tasks file for roles/ssl-certificate

- name: ssl certificate | check parameters
  fail:
    msg: ssl_certificate_public_content or ssl_certificate_key_content is empty
  when: >-
    (not ssl_certificate_selfsigned_create) and
    (not ssl_certificate_public_content or not ssl_certificate_key_content)

- name: ssl certificate | create certificates directory
  become: yes
  file:
    path: "{{ item | dirname }}"
    state: directory
  with_items:
    - "{{ ssl_certificate_public_path }}"
    - "{{ ssl_certificate_intermediate_path }}"
    - "{{ ssl_certificate_bundled_path }}"
    - "{{ ssl_certificate_key_path }}"
  when:  ansible_check_mode == True
  ignore_errors: yes

# Create from content of variable e.g. from vault
# Only the key needs to be kept private

- name: ssl certificate | write SSL public certificate
  become: yes
  copy:
    content: "{{ ssl_certificate_public_content }}"
    dest: "{{ ssl_certificate_public_path }}"
    mode: 0444
  when: 'ssl_certificate_public_content | length > 0'

- name: ssl certificate | write SSL intermediate certificate
  become: yes
  copy:
    content: "{{ ssl_certificate_intermediate_content }}"
    dest: "{{ ssl_certificate_intermediate_path }}"
    mode: 0444
  when: 'ssl_certificate_intermediate_content | length > 0'

- name: ssl certificate | write SSL certificate key
  become: yes
  copy:
    content: "{{ ssl_certificate_key_content }}"
    dest: "{{ ssl_certificate_key_path }}"
    mode: 0400
  no_log: True
  when: 'ssl_certificate_key_content | length > 0'

# Self-signed
# http://serialized.net/2013/04/simply-generating-self-signed-ssl-certs-with-ansible/

- name: ssl certificate | generate self-signed SSL certificate
  become: yes
  command:
    openssl req -new -nodes -x509 -subj "{{ ssl_certificate_selfsigned_subject }}" -days {{ ssl_certificate_selfsigned_days }} -keyout {{ ssl_certificate_key_path }} -out {{ ssl_certificate_public_path }} -extensions v3_ca
  args:
    # Don't overwrite existing certificate
    creates: "{{ ssl_certificate_key_path }}"
  when: ssl_certificate_selfsigned_create

# Create combined certificate and key

#- name: ssl certificate | read public certificate
#  become: yes
#  slurp:
#    src: "{{ ssl_certificate_public_path }}"
#  register: _ssl_certificate_public_content
#
#- name: ssl certificate | read certificate key
#  become: yes
#  slurp:
#    src: "{{ ssl_certificate_key_path }}"
#  register: _ssl_certificate_key_content
#  no_log: True
#
#- name: ssl certificate | write bundled certificate
#  become: yes
#  copy:
#    content: |-
#      {{ _ssl_certificate_public_content.content | b64decode | trim }}
#      {{ ssl_certificate_intermediate_content | trim }}
#    dest: "{{ ssl_certificate_bundled_path }}"
#    mode: 0444
#  when: "ssl_certificate_bundled_path | length > 0"
#
#- name: ssl certificate | write SSL combined certificate key
#  become: yes
#  copy:
#    content: |-
#      {{ _ssl_certificate_public_content.content | b64decode | trim  }}
#      {{ ssl_certificate_intermediate_content | trim }}
#      {{ _ssl_certificate_key_content.content | b64decode | trim }}
#    dest: "{{ ssl_certificate_combined_path }}"
#    mode: 0400
#  no_log: True
#  when: "ssl_certificate_combined_path | length > 0"

- name: Copy nginx config file
  template:
    src: nginx.j2
    dest: /etc/nginx/nginx.conf

